GPSTracker.Java:
package com.anwar.antitheft;
import android.app.AlertDialog;
import android.app.Service;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Bundle;
import android.os.IBinder;
import android.provider.Settings;
import android.util.Log;

public class GPSTracker extends Service implements LocationListener {

	private final Context mContext;

	flag for GPS status
	boolean isGPSEnabled = false;

	flag for network status
	boolean isNetworkEnabled = false;

	// flag for GPS status
	boolean canGetLocation = false;

	Location location; // location
	double latitude; // latitude
	double longitude; // longitude

	The minimum distance to change Updates in meters
	private static final long MIN_DISTANCE_CHANGE_FOR_UPDATES = 10; // 1meters

	The minimum time between updates in milliseconds
	private static final long MIN_TIME_BW_UPDATES = 1000 * 60 * 1; // 1 minute

	Declaring a Location Manager
	protected LocationManager locationManager;

	public GPSTracker(Context context) {
		this.mContext = context;
		getLocation();
	}

	public Location getLocation() {
		try {
locationManager = (LocationManager) mContext.getSystemService(LOCATION_SERVICE);
 getting GPS status
isGPSEnabled = locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER);


 getting network status
isNetworkEnabled=locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER);

			if (!isGPSEnabled && !isNetworkEnabled) {
				// no network provider is enabled
			} else {
	this.canGetLocation = true;
	if (isNetworkEnabled) {
	locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER,MIN_TIME_BW_UPDATES,MIN_DISTANCE_CHANGE_FOR_UPDATES, this);
	Log.d("Network", "Network");
	if (locationManager != null) {
	Location=locationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER);
		if (location != null) {
		latitude = location.getLatitude();
		longitude = location.getLongitude();
						}
					}
				}
if GPS Enabled get lat/long using GPS Services
	if (isGPSEnabled) {
	if (location == null) {
	locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER,
	MIN_TIME_BW_UPDATES,MIN_DISTANCE_CHANGE_FOR_UPDATES, this);
	Log.d("GPS Enabled", "GPS Enabled");
	if (locationManager != null) {
	location = locationManag.getLastKnownLocation(LocationManager.GPS_PROVIDER);
	if (location != null) {
	latitude = location.getLatitude();
	longitude = location.getLongitude();
							}
						}
					}
				}
			}

		} catch (Exception e) {
			e.printStackTrace();
		}

		return location;
	}
	
	 * Stop using GPS listener
	 * Calling this function will stop using GPS in your app
	 
	public void stopUsingGPS(){
		if(locationManager != null){
		locationManager.removeUpdates(GPSTracker.this);
		}		
	}
	
	
	 * Function to get latitude

	public double getLatitude(){
		if(location != null){
			latitude = location.getLatitude();
		}
		
		return latitude
		return latitude;
	}
	
	 * Function to get longitude
	
	public double getLongitude(){
		if(location != null){
			longitude = location.getLongitude();
		}
		
		 return longitude
		return longitude;
	}
	 * Function to check GPS/wifi enabled
	  @return boolean
	public boolean canGetLocation() {
		return this.canGetLocation;
	}
	 * Function to show settings alert dialog
	 * On pressing Settings button will lauch Settings Options
public void showSettingsAlert(){AlertDialog.Builder alertDialog = new AlertDialog.Builder(mContext);
 Setting Dialog Title
        alertDialog.setTitle("GPS is settings");
 Setting Dialog Message
        alertDialog.setMessage("GPS is not enabled. Do you want to go to settings menu?");
 On pressing Settings button
        alertDialog.setPositiveButton("Settings", new DialogInterface.OnClickListener() {
            public void onClick(DialogInterface dialog,int which) {
            	Intent intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);
            	mContext.startActivity(intent);
            }
        });
 
        on pressing cancel button
        alertDialog.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
            public void onClick(DialogInterface dialog, int which) {
            dialog.cancel();
            }
        });
 
         Showing Alert Message
        alertDialog.show();
	}

	@Override
	public void onLocationChanged(Location location) {
	}

	@Override
	public void onProviderDisabled(String provider) {
	}

	@Override
	public void onProviderEnabled(String provider) {
	}

	@Override
	public void onStatusChanged(String provider, int status, Bundle extras) {
	}

	@Override
	public IBinder onBind(Intent arg0) {
		return null;
	}
}
SimActivity.Java:
package com.anwar.antitheft;

import java.io.IOException;
import java.util.ArrayList;

import android.app.Activity;
import android.content.Context;
import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.telephony.TelephonyManager;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

public class SimActivity extends Activity {
	Dbhandler myDbHelper;
	SQLiteDatabase Mydatabase;
	ArrayList<String> aa;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_sim);
		Button bt = (Button) findViewById(R.id.button1);
		final EditText et = (EditText) findViewById(R.id.editText1);

		this.myDbHelper = new Dbhandler(this);
		FetchingData();
		Mydatabase = myDbHelper.getReadableDatabase();
		aa = this.myDbHelper.getModes(Mydatabase);
		System.out.println("values of Db      " + aa);
		String s1 = aa.toString();
		s1 = s1.substring(1, s1.length() - 1).trim();

		et.setText(s1);
		bt.setOnClickListener(new OnClickListener() {

			@Override
		public void onClick(View arg0) {
		 TODO Auto-generated method stub
		String stxt = et.getText().toString();
	TelephonyManager telephoneMgr = (TelephonyManager) getSystemService(Context.TELEPHONY_SERVICE);
		String phoneNumber = telephoneMgr.getLine1Number();
		myDbHelper = new Dbhandler(SimActivity.this);
		FetchingData();
		Mydatabase = myDbHelper.getReadableDatabase();
Mydatabase.execSQL("update SimNumber set SimNo='" + phoneNumber	+ "' where SNO='1'");
Mydatabase.execSQL("update PhoneNumber set PhoneNumberr='"+ stxt + "' where SNO='1'");


Toast.makeText(getApplicationContext(),"UpdatedSuccessfully",Toast.LENGTH_LONG).show();
			}
		});

	}

	private void FetchingData() {
		try {

			myDbHelper.onCreateDataBase();

		} catch (IOException ioe) {

			throw new Error("Unable to create database");

		}
		try {

			myDbHelper.openDataBase();
			Mydatabase = myDbHelper.getWritableDatabase();
			System.out.println("executed");

		} catch (SQLException sqle) {

			throw sqle;


	}
}}
